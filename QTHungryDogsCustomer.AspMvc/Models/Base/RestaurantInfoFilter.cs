//@CustomCode
namespace QTHungryDogsCustomer.AspMvc.Models.Base
{
    using System;
    ///
    /// Generated by the generator
    ///
    public partial class RestaurantInfoFilter : Models.View.IFilterModel
    {
        ///
        /// Generated by the generator
        ///
        static RestaurantInfoFilter()
        {
            ClassConstructing();
            ClassConstructed();
        }
        static partial void ClassConstructing();
        static partial void ClassConstructed();
        ///
        /// Generated by the generator
        ///
        public RestaurantInfoFilter()
        {
            Constructing();
            Constructed();
        }
        partial void Constructing();
        partial void Constructed();
        ///
        /// Generated by the generator
        ///
        public System.String? DisplayName
        {
            get;
            set;
        }
        ///
        /// Generated by the generator
        ///
        [Display(Name = "Zipcode")]
        public System.String? AddressZipcode
        {
            get;
            set;
        }
        ///
        /// Generated by the generator
        ///
        [Display(Name = "City")]
        public System.String? AddressCity
        {
            get;
            set;
        }
        ///
        /// Generated by the generator
        ///
        public bool HasEntityValue => DisplayName != null || AddressZipcode != null || AddressCity != null;
        private bool show = true;
        ///
        /// Generated by the generator
        ///
        public bool Show => show;
        ///
        /// Generated by the generator
        ///
        public string CreateEntityPredicate()
        {
            var result = new System.Text.StringBuilder();
            if (DisplayName != null)
            {
                if (result.Length > 0)
                {
                    result.Append(" || ");
                }
                result.Append($"(DisplayName != null && DisplayName.Contains(\"{DisplayName}\"))");
            }
            if (AddressZipcode != null)
            {
                if (result.Length > 0)
                {
                    result.Append(" || ");
                }
                result.Append($"(AddressZipcode != null && AddressZipcode.Contains(\"{AddressZipcode}\"))");
            }
            if (AddressCity != null)
            {
                if (result.Length > 0)
                {
                    result.Append(" || ");
                }
                result.Append($"(AddressCity != null && AddressCity.Contains(\"{AddressCity}\"))");
            }
            return result.ToString();
        }
        ///
        /// Generated by the generator
        ///
        public override string ToString()
        {
            return $"DisplayName: {(DisplayName ?? "---")} Zipcode: {(AddressZipcode ?? "---")} City: {(AddressCity ?? "---")}";
        }
    }
}
